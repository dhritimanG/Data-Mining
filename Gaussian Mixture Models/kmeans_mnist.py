#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Sun Feb 11 20:20:20 2018

@author: dhritiman
"""
import scipy.misc
import numpy as np
import time
from __future__ import division
import random
import time

images_train = train_images()
images_train.shape

x_train = images_train.reshape((images_train.shape[0], images_train.shape[1] * 
                                images_train.shape[2]))
x_train.shape

x_train = np.array(x_train)
x_train[0]

# Normalizing dataset:
x_train = x_train/255

def init_centroid(dataset, k):
    random_values = random.sample(dataset, k)
    return np.array(random_values)

initial_centroids = init_centroid(x_train, 10)
initial_centroids.shape

# Euclidean distance
def euclidian(a, b):
    return np.linalg.norm(a-b)


# Dot similarity
def compute_dot_product(matA, matB):
    dot_result = np.dot(matA, matB.T)
    return dot_result


# Forming clusters
def form_cluster(dataset, centroids):
    centroid_indices = range(len(centroids))
    
    #initialize an empty list for each centroid containing all the datapoints 
    # that are closest to that centroid compared to other centroids
    clusters = {c:[] for c in centroid_indices}
    
    for datapoint in dataset:
        # for each datapoint, pick the closest centroid.
        smallest_distance = float("inf")
        for mu_index in centroid_indices:
            mu = centroids[mu_index]
            distance = np.linalg.norm(datapoint-mu)
            if(distance < smallest_distance):
                closest_centroid_index = mu_index
                smallest_distance = distance
        # allocate that datapoint to the cluster of that centroid.
        clusters[closest_centroid_index].append(datapoint)
    return clusters

# Returns a list of new centroids after mean corresponding to the clusters
# computes the mean (i.e. the centroid at the middle) of a list of vectors 
# (a cluster).
# take the sum and then divide by the size of the cluster.
# assumes all datapoints in labelled_cluster are labelled.
def move_centroids(all_clusters):
    new_centroids = []
    for cluster in all_clusters:
        new_centroids.append(np.mean(all_clusters[cluster]))
    return new_centroids


#inital_clusters = form_cluster(x_train, initial_centroids)
##move_centroids(inital_clusters)
#inital_clusters.keys()


#form clusters around centroids, then keep moving the centroids
#until the moves are no longer significant, i.e. we've found
#the best-fitting centroids for the data.
# Note: in the beginning new_centroids is initial_centroids
# and also new_clusters is initial clusters
def repeat_until_convergence(x_train, new_clusters, new_centroids):
    previous_max_difference = 0
    iteration = 0
    while True:
        print(iteration)
        iteration += 1
        old_centroids = new_centroids
        new_centroids = move_centroids(new_clusters)
        new_clusters = form_cluster(x_train, new_centroids)
        # we keep old_clusters and new_clusters so we can get the maximum 
        # difference between centroid positions every time. we say the  
        # centroids have converged
        # when the maximum difference between centroid positions is small. 
        differences = map(lambda a, b: np.linalg.norm(a-b),old_centroids,
                          new_centroids)
        print(differences)
        max_difference = max(differences)
        difference_change = abs((max_difference-previous_max_difference)/np.mean([previous_max_difference,max_difference])) * 100
        previous_max_difference = max_difference
        if np.isnan(difference_change):
            break
    return new_clusters, new_centroids

def cluster(x_train, k):
    """
    runs k-means clustering on the data. It is assumed that the data is labelled.
    """
    centroids = init_centroid(x_train, k)
    clusters = form_cluster(x_train, centroids)
    final_clusters, final_centroids = repeat_until_convergence(x_train, clusters, centroids)
    return final_clusters, final_centroids


time_start = time.time()
trained_clusters, trained_centroids = cluster(x_train, 10)
time_end = time.time()
time_delta = time_end - time_start
print(time_delta)

'''
Output:
    0
[7.9432966231298519, 8.4709682836642024, 7.632094755886687, 9.0731386531810134, 8.3438709881350608, 9.9219446568557483, 10.852459478230953, 8.5034737655356558, 5.9471976038202392, 7.3744021388349479]
1
[0.00069657845017315201, 0.0044776100778882721, 0.01898246746033172, 0.00030039420639907388, 0.0046333027012457895, 0.0044122999441849886, 0.020390115648905027, 0.00069190710798350263, 0.0011518361791632431, 0.0017394166487958301]
2
[0.00095039522405629406, 0.001620064296580348, 0.0058105088060937254, 0.00051949699654524339, 0.0021811991557686428, 0.0019532525580064908, 0.0070593056165488832, 0.00097707276464828463, 0.0035275634704517722, 5.5407033660082039e-05]
3
[0.00079194785723826766, 0.0010438550479620334, 0.0031981402010758109, 0.0012745201754687518, 0.0014539827538118943, 0.0024140799142822744, 0.0042206460667355838, 0.00068929753730145871, 0.0030640591428424124, 0.0012407128506847914]
4
[0.00054334814381878926, 0.00098784903672016755, 0.0021685589602149918, 0.0015830129180582353, 0.0011730220406004632, 0.0023001329086095312, 0.0029284838184655548, 0.00042088888484329012, 0.0025693175700135934, 0.0016589777605545836]
5
[0.00047076404713494724, 0.001007013828692449, 0.001671342167010495, 0.0015482741610264028, 0.0010760587475347749, 0.0020386971808487031, 0.002237572690754086, 0.00031950417476164783, 0.002206238957058293, 0.0017269996019221856]
6
[0.00041305171450448097, 0.0010112344306813514, 0.0012572850349470838, 0.0014613964526953294, 0.0010140529000417786, 0.0018176304100548379, 0.0019997283057534287, 0.0002648453155966457, 0.0018606538442227788, 0.0016910273278596122]
7
[0.0003702581730323784, 0.0009769303868616408, 0.0010192853031864429, 0.0014919458089633353, 0.00099721377516098775, 0.0017352124269578717, 0.001775013071494469, 0.00028221206499420837, 0.0016185484706193604, 0.0015580460276218427]
8
[0.00036934175626132659, 0.00093817439863139174, 0.00095860912576853363, 0.0014787146548406738, 0.00099021182673253438, 0.0016739936026221869, 0.0014587736334692736, 0.00031508573815600127, 0.0014432329568486862, 0.0013901938366731176]
9
[0.00030974538490391446, 0.00082264631149606138, 0.00079666499126197776, 0.0013427017232345295, 0.00087533913234777438, 0.0015579769635924445, 0.0013397664181273583, 0.00029885419553932202, 0.0012625197413934225, 0.0012184120955084088]
10
[0.00027025959935836341, 0.00078746413768332468, 0.00072311100881963797, 0.0012755794084122196, 0.00083521211090381575, 0.0014939606985654164, 0.0013976361125513093, 0.00031788971596430349, 0.0011216745502063419, 0.001075662692239035]
11
[0.00027439644053917078, 0.00075074187683525639, 0.0006344251656803801, 0.0011599248939603846, 0.00080701250306883243, 0.0013130735327835374, 0.0011407058399534042, 0.00028604323721156955, 0.00098648268595728783, 0.0010016472259396225]
12
[0.00025510216011945253, 0.00072243091957541195, 0.00059453651588706191, 0.0010322734304182568, 0.00072769348102333375, 0.0011689511879373338, 0.00094484487284626772, 0.00029066352834697384, 0.0009273978515670217, 0.00093903026540563539]
13
[0.00023558784862598436, 0.00068757955944556692, 0.00041845051264932653, 0.00093354259123151762, 0.00068837449173006493, 0.0011081236862487409, 0.0011193537798811493, 0.00026812561083103259, 0.00074606451257608342, 0.00086062387553434427]
14
[0.00021640596730526651, 0.0006283380269553468, 0.00039038572187072296, 0.00077863568158878516, 0.00058216880815881167, 0.00096746302779224247, 0.0009157766600073336, 0.00026969752944655534, 0.00066991126690461866, 0.00074938830439827409]
15
[0.00018500289646020129, 0.00053219831716846966, 0.00035512494726702704, 0.00069960483734612944, 0.00050350194117593228, 0.00094177948727172667, 0.00088796510403343909, 0.00024170972012016456, 0.00062139572470874815, 0.00065475087927126252]
16
[0.00014979928893632533, 0.00053017793381542055, 0.0003324310936920552, 0.00065161746756725591, 0.0004788729186013807, 0.00085993027216221818, 0.0010435917130501571, 0.00021925139508086056, 0.000525700628818071, 0.00059606554309526993]
17
[0.00011258903537650355, 0.00047774998270055935, 0.00032831850744247104, 0.00069348487867271214, 0.00046157908683081006, 0.00089427667084021611, 0.0010338169654928453, 0.00021053764805673003, 0.00052166553335372678, 0.00056927264255718368]
18
[0.00010316744198080041, 0.00042637325049098285, 0.00029105407486915147, 0.00066734991572595104, 0.00045295380903034865, 0.00080983812955104373, 0.00088618762063180645, 0.00019656658692138174, 0.00047312639259071421, 0.0005213740031451003]
19
[7.2374515018014396e-05, 0.00038231043754989591, 0.00024895891780025298, 0.00058668837491979153, 0.00039713913570083026, 0.00073121873544113036, 0.0009852685095913527, 0.00018390082032260224, 0.00041488020170410422, 0.00046440259253890948]
20
[7.6223835447031263e-05, 0.0003527570263124058, 0.00023191497822679097, 0.00055950472821844621, 0.00035586049485625271, 0.00072659322011139893, 0.00087606990499816684, 0.00017191139662262045, 0.00037236347758400068, 0.00041647931447529041]
21
[8.1997549424478455e-05, 0.00031900412504537456, 0.00023203409407757808, 0.00055223301588930296, 0.00034653943941512222, 0.00063849472814278552, 0.00061904625233427657, 0.00014564756511187271, 0.00038352519462785117, 0.00040727568994085306]
22
[7.6144710351888634e-05, 0.00029321134119898729, 0.00023297815965052371, 0.00047205045296538906, 0.00028756666187645941, 0.00058079032286395549, 0.00053149450016226618, 0.00013122506944274193, 0.00036672677636923057, 0.00037426805945896258]
23
[8.5484713979455673e-05, 0.000284773164335686, 0.00020023472741179105, 0.00041723475873650662, 0.00028506242732884157, 0.00054117101865780448, 0.0005876174740594986, 0.00011837886938473319, 0.00031778131762380535, 0.00035571637145354051]
24
[6.882573677791104e-05, 0.0002783934888324624, 0.0002072668863699334, 0.00038752271205677591, 0.00024419188000177061, 0.00050668221494692967, 0.0005829811628306758, 0.00010627042357935768, 0.00029508533158045802, 0.00033309734252802425]
25
[6.2724426221683061e-05, 0.00022709423702668707, 0.00018937541698326593, 0.00035917444483679617, 0.00024667147052190308, 0.0003986640163738675, 0.0004174055133889798, 9.5520675332222416e-05, 0.00030330231058267598, 0.00031362959274677804]
26
[5.4225370374860749e-05, 0.00023164115158057219, 0.0001860549821409152, 0.00033215064865282917, 0.00019810518675031363, 0.00043897411343027382, 0.00049474394526261012, 9.2469145175549938e-05, 0.00029898820391528746, 0.00031208564872364786]
27
[5.2514945379555922e-05, 0.00019628547528191542, 0.00015089113028776691, 0.00025806248111792662, 0.00016123756076963369, 0.00041840877886697991, 0.00053199607646475799, 7.5050403349791184e-05, 0.00028029650863942157, 0.00029814751096975123]
28
[4.4991809304839592e-05, 0.00017823106956646462, 0.00012546320821746337, 0.00030729260546832893, 0.00019692660157893949, 0.00033044072560123317, 0.00037712090586539126, 7.5829968606416776e-05, 0.00025310235366649003, 0.00025941209008918664]
29
[3.7628960375124532e-05, 0.00018851817148927974, 0.00010482388149921085, 0.00026739434542175089, 0.00015155006331649123, 0.00034151333540569095, 0.00031065847337613528, 8.1457629001274734e-05, 0.00020089992242364185, 0.00023710320416327202]
30
[3.673288898087268e-05, 0.00016548175207496685, 0.00011585844338122403, 0.0002500487005517027, 0.00015827932445464099, 0.00031645919783562793, 0.00036437694718161051, 7.0502287240731265e-05, 0.00019246873604890358, 0.00021451419866184984]
31
[3.6408454041597649e-05, 0.00018178827105937156, 9.5254238032881078e-05, 0.00025340555609551507, 0.00013977575978729728, 0.00033362385144300455, 0.00029509578735609221, 7.7591301642393473e-05, 0.00020210556130319246, 0.00023794675131960652]
32
[4.0052834605619481e-05, 0.00014985366766076536, 0.00010628929597754355, 0.00023066218369280356, 0.00016242064015983826, 0.00022194222425508947, 0.0001735216944300233, 6.6665502030938129e-05, 0.00018596363341992495, 0.0001995136278736126]
33
[4.5504226812265181e-05, 0.00013734663205147712, 8.5389460965173969e-05, 0.00022110404359088065, 0.00013952455780430473, 0.00027118614050511414, 0.00017440555683057024, 6.5586580413279361e-05, 0.00017042421820237519, 0.00018048347770374673]
34
[2.550898139125346e-05, 0.00014734891012616047, 8.822062502444189e-05, 0.00022307130876006442, 0.00013845901817780004, 0.00019535976445625436, 0.00017548420391383379, 4.695858755746074e-05, 0.00015246593208927128, 0.00019134464694986475]
35
[3.4093247580940789e-05, 0.00011447850546185412, 6.1755176006407508e-05, 0.00016186871556878035, 0.00010193472537992077, 0.00018653387277661748, 7.5162681559992617e-05, 3.9830177657990129e-05, 0.00012765820383150994, 0.00016040042223237905]
36
[2.9168655025113566e-05, 0.00010182332117023019, 8.8851961354934061e-05, 0.00016521735236046942, 0.00010857072810643853, 0.00018238834388178971, 0.00017633149040596763, 5.6268651430185779e-05, 0.0001400831229030064, 0.00012221791690282535]
37
[4.1994624451702212e-05, 9.8364164927602915e-05, 5.6767568339839702e-05, 0.00014339095001633662, 0.00010826594366247777, 0.00019673681177853619, 0.00020401163132854894, 4.2430899860751436e-05, 0.00011318866892728874, 0.00012802331447733795]
38
[1.5064942565090611e-05, 7.5636964502356907e-05, 7.8537781677337493e-05, 0.00013755299942030952, 6.9766529303544322e-05, 0.00020391203048580886, 0.00025794788688432435, 2.0272889752259715e-05, 0.00011425972536974194, 0.00011460927131380638]
39
[1.6573016624998882e-05, 8.6398769203827053e-05, 0.00011493956674066969, 0.00011926993871988478, 6.2442332649598198e-05, 0.00019702163119478255, 0.00023544475670495002, 2.9644920821553233e-05, 0.00011885678667267197, 0.00010712974150088594]
40
[1.5600269257565191e-05, 7.898014649591889e-05, 6.60840793544476e-05, 0.00012864806470469503, 5.5613409567251137e-05, 0.00022880830030663768, 0.00021172932623797491, 3.889227577458243e-05, 9.5448743035075889e-05, 9.5663618542601858e-05]
41
[1.6949277658662165e-05, 7.5432910501840866e-05, 8.0196671991147883e-05, 9.7831289480820871e-05, 6.3711163770130419e-05, 0.00015652621460215954, 0.00018642839283011803, 3.5273383031109162e-05, 0.00012563298344828167, 0.00011484528833445584]
42
[1.286336163555668e-05, 9.3549076503829376e-05, 0.00010311690230484227, 7.327522691227828e-05, 4.5205155070782155e-05, 8.2833392367004377e-05, 5.338059908477355e-05, 4.0558759254155641e-05, 0.00012940405012633327, 0.00011553077116528698]
43
[4.0724594366214895e-06, 9.0941112720802075e-05, 5.5947665255032253e-05, 7.1523281351459911e-05, 4.5856708675962032e-05, 7.4552787031001433e-05, 8.0320288742607993e-05, 5.16161250758429e-05, 0.00010506764553183667, 0.00010771785866391104]
44
[8.1241440206269999e-06, 8.6500120838342576e-05, 3.9215496202914257e-05, 5.5213282150468057e-05, 2.6441372076274616e-05, 6.649961240182134e-05, 5.3648428430586037e-05, 5.0841973694565334e-05, 7.6271092164778564e-05, 9.4878706813447677e-05]
45
[1.469300092921122e-05, 6.8383778915076521e-05, 2.7992010264266121e-05, 4.0252665517354069e-05, 2.3457002364973834e-05, 3.0502011557687059e-05, 2.6879288108405675e-05, 5.1882327443103504e-05, 5.4759147011085307e-05, 6.578829421705068e-05]
46
[1.691975027828807e-05, 7.6697230467784316e-05, 1.1190188225443376e-05, 2.9592077182338805e-05, 1.8537913662686201e-05, 1.1095850999232049e-05, 0.0, 6.3729471312057306e-05, 4.7773189760458301e-05, 6.4945240105016011e-05]
47
[3.6098300926767912e-05, 8.6009728057334645e-05, 1.6762686613568112e-05, 1.9532166531305295e-05, 1.192593150206589e-05, 1.3873172873601902e-05, 2.6832718868108341e-05, 7.434496916874922e-05, 3.3216610592204376e-05, 6.7188642658061459e-05]
48
[2.9893754970145014e-05, 7.0412523159285589e-05, 2.2365671651085328e-05, 2.0878273770619238e-05, 5.5160291168587783e-06, 1.6641695213426289e-05, 0.0, 6.0326528737053575e-05, 4.0644930907662857e-05, 6.0412799369316539e-05]
49
[2.5647751566049148e-05, 5.4905766084037411e-05, 1.1190829010770953e-05, 2.6684143625194112e-05, 1.4010775946371457e-05, 5.5494344497475367e-06, 0.0, 5.3800275403165232e-05, 3.2722388631875599e-05, 4.5045232536289337e-05]
50
[2.3413581256070959e-05, 5.1332206588830531e-05, 1.680276385471885e-05, 1.2509709988062223e-05, 5.2992737763768449e-06, 5.5418782629601537e-06, 0.0, 5.4605629359105734e-05, 3.0518564268042225e-05, 3.4580887398646953e-05]
51
[1.7152995863856102e-05, 4.0362046684686015e-05, 1.1205719298190697e-05, 2.3689507628321671e-06, 1.3054623347330541e-06, 8.343468208021898e-06, 2.6856692431354023e-05, 3.881441577199829e-05, 1.8965429541245582e-05, 2.6033873771050264e-05]
52
[1.282081537826163e-05, 3.1198699824194764e-05, 8.4008187400397283e-06, 6.0706976871549578e-06, 1.5049953055457088e-06, 1.1087290676337069e-05, 0.0, 2.5954549802281734e-05, 2.6987563618061094e-05, 3.4661346991107789e-05]
53
[1.0904717810955589e-05, 3.3055146010346759e-05, 1.4012860653125903e-05, 3.0344508028246064e-06, 4.514505738184571e-06, 5.5482950525320707e-06, 0.0, 2.3032258801652938e-05, 3.033355660365944e-05, 3.5656544829246184e-05]
54
[7.6262394241577436e-06, 2.5704997440992305e-05, 8.4070141121925235e-06, 0.0, 3.0088776042380694e-06, 0.0, 0.0, 1.5672609581462993e-05, 3.2623840035397866e-05, 3.7985736479534404e-05]
55
[1.0907694010658942e-05, 2.2056634726555502e-05, 1.4012634985439976e-05, 0.0, 4.5129144302102908e-06, 0.0, 0.0, 1.121219375960214e-05, 3.0429229052678086e-05, 3.6682031018447914e-05]
56
[6.4658366964731595e-06, 3.0270414637739718e-05, 2.8077587252928193e-05, 0.0, 1.5046691597131456e-06, 0.0, 0.0, 2.0233221330850926e-05, 3.0387925499378299e-05, 2.7127764841386459e-05]
57
[8.5881720731650901e-06, 2.7539323500733182e-05, 3.6634817304689871e-05, 0.0, 1.5049821267820729e-06, 0.0, 0.0, 1.9391077759334241e-05, 3.6693978083549017e-05, 2.824384897508192e-05]
58
[1.0803876501180865e-05, 2.2947461327790797e-05, 2.262124362853446e-05, 0.0, 3.0101171988594633e-06, 0.0, 0.0, 1.489050518771462e-05, 2.7058412997632564e-05, 2.8196223714666013e-05]
59
[1.2918368052644569e-05, 2.7528401543380765e-05, 1.695243695835208e-05, 0.0, 3.0097975526888199e-06, 0.0, 0.0, 1.9522778317238032e-05, 1.8227642778104181e-05, 2.5904224008804766e-05]
60
[1.0694326037730129e-05, 2.7509940326450599e-05, 1.4142325160650115e-05, 2.3693879307729038e-06, 3.2064309006263336e-06, 0.0, 0.0, 1.9485706685390403e-05, 2.4898392094449551e-05, 3.1466788270706481e-05]
61
[1.1946985717770087e-05, 2.3820169516824974e-05, 1.4158119150543824e-05, 0.0, 4.5167084458397344e-06, 0.0, 0.0, 1.2169527422473125e-05, 3.0491261485479648e-05, 3.8926276302544971e-05]
62
[1.677410835157489e-05, 1.8307641619599857e-05, 1.1337032031287497e-05, 2.3694455042189144e-06, 1.5237240462789847e-05, 0.0, 0.0, 1.3917266225238478e-05, 3.0274530616422601e-05, 2.9789907946345395e-05]
63
[2.0055945052749324e-05, 1.5571532211877681e-05, 1.4170965152458803e-05, 4.7390635776745071e-06, 1.8414771517705208e-05, 0.0, 0.0, 1.582258918092494e-05, 2.0814282057315947e-05, 1.7985747076967873e-05]
64
[1.2048537074371701e-05, 1.1901494974403404e-05, 2.2707314385798927e-05, 9.4755385228184608e-06, 1.2798546648762343e-05, 0.0, 0.0, 1.486381378812407e-05, 2.717849858446808e-05, 1.4999418409322729e-05]
65
[1.5622536781528806e-05, 1.6492054195696437e-05, 1.9906557989946005e-05, 1.958967817869417e-05, 2.3903586532064702e-05, 5.5482950525320707e-06, 0.0, 1.5731241957667175e-05, 2.2744196447432863e-05, 1.5874487025793749e-05]
66
[2.1016157552650183e-05, 2.2925723945702026e-05, 1.1383528581779268e-05, 2.2590875909167529e-05, 2.5396618955036976e-05, 1.1087290676337069e-05, 0.0, 2.1350600323155611e-05, 1.7780770425995795e-05, 2.0985730157921378e-05]
67
[3.3039145989399721e-05, 1.4674124550181911e-05, 2.8450325881973493e-06, 2.1896315870739702e-05, 3.3069209171426861e-05, 5.542996662138977e-06, 0.0, 2.4374006905053536e-05, 1.281968114112686e-05, 1.588350955636364e-05]
68
[2.2794855865621022e-05, 2.8434512156755298e-05, 8.5374662176299076e-06, 1.8846622837326299e-05, 2.2583493081540507e-05, 0.0, 0.0, 2.9754183646785171e-05, 7.7660130417822604e-06, 1.6478716631476709e-05]
69
[1.9403156518216225e-05, 2.4758460541174365e-05, 1.4244818988158603e-05, 2.1839168776155438e-05, 1.9606995820181661e-05, 5.550548941163358e-06, 0.0, 3.1513628386131698e-05, 1.5264243471826977e-05, 1.2624114181944424e-05]
70
[1.5172023616116803e-05, 2.9388836207511204e-05, 5.6999735120813466e-06, 1.0072302683433731e-05, 1.1101297130389209e-05, 5.5501113280231884e-06, 0.0, 3.0394129592548058e-05, 7.5028531566628809e-06, 1.2471114936962735e-05]
71
[1.39216389642427e-05, 3.493478807088668e-05, 5.7033005772672007e-06, 1.309526956880247e-05, 8.102254127395625e-06, 1.1094924662946593e-05, 0.0, 2.9499173036545701e-05, 1.0288097618424419e-05, 2.2840382987401875e-05]
72
[1.1142810071418374e-05, 3.125967381721606e-05, 5.7040303376373891e-06, 1.2417344105147832e-05, 1.5805668043766818e-05, 5.5448175564076774e-06, 0.0, 2.0102297566493288e-05, 1.308270923935928e-05, 2.4033346602503336e-05]
73
[1.7877506158003875e-05, 2.9421240694813e-05, 0.0, 2.3486880136869281e-06, 1.6685556296469617e-05, 0.0, 0.0, 1.9279103240843476e-05, 2.5151883856475155e-05, 3.709902887327754e-05]
74
[2.4225703594227266e-05, 2.7558214802991809e-05, 8.5528583725416607e-06, 7.0518718214285236e-06, 2.0052281683863304e-05, 0.0, 0.0, 2.0453319821700511e-05, 2.599734839484058e-05, 3.6900614202334259e-05]
75
[1.7984983128410681e-05, 1.9294424670426857e-05, 5.703251468022752e-06, 1.174865314823581e-05, 2.4924701138961947e-05, 0.0, 0.0, 1.1997130522772848e-05, 3.8429447010809858e-05, 4.063514089906739e-05]
76
[1.8658404824817287e-05, 2.2966896282797244e-05, 1.4255458582232428e-05, 1.1733004578878825e-05, 1.8942002238425681e-05, 0.0, 0.0, 1.4929665126173219e-05, 3.3665464545654111e-05, 3.9129417808647649e-05]
77
[1.6730810870835278e-05, 2.1117212762489235e-05, 1.7117029094224079e-05, 1.3064170764520711e-05, 1.8525439568095603e-05, 1.1100286030130135e-05, 0.0, 1.1139454709430119e-05, 3.3980284479789846e-05, 3.5998142981802372e-05]
78
[1.1253785549752982e-05, 2.4787029407322136e-05, 2.5733167922058209e-05, 1.1729918127395544e-05, 1.8923105742085777e-05, 8.3345617720997911e-06, 2.6856692431354023e-05, 1.1927700824948539e-05, 3.0536089089344687e-05, 2.9459174252510767e-05]
79
[1.106350321089522e-05, 2.7535435754455495e-05, 1.7175707450391153e-05, 1.1724044976207937e-05, 1.5936190847248843e-05, 0.0, 0.0, 1.653690277475528e-05, 2.5530458984776572e-05, 2.9497897988173261e-05]
80
[1.587312109790906e-05, 3.0273724782745037e-05, 1.1459521962749186e-05, 4.6885809275865054e-06, 1.9774725862981013e-05, 0.0, 0.0, 1.4638672551775533e-05, 1.7964677991935685e-05, 2.9342541670307476e-05]
81
[1.9631308327910935e-05, 2.2931147034471744e-05, 1.4325419698896225e-05, 2.3449301040645576e-06, 1.0619547978041322e-05, 0.0, 0.0, 2.2248766900295758e-05, 2.6713512694565011e-05, 2.7618935370829489e-05]
82
[1.8370663014993793e-05, 1.743540734777671e-05, 1.1466417603689383e-05, 2.3460739142777687e-06, 7.6429258515087195e-06, 0.0, 0.0, 1.8657366915225682e-05, 1.5164653118862614e-05, 1.8926766767721204e-05]
83
[1.4228045044556437e-05, 1.9269233657331908e-05, 2.8677439166124863e-06, 2.346140592551782e-06, 9.1336372837202973e-06, 0.0, 0.0, 1.9375196423587759e-05, 1.7210812480558668e-05, 2.0287888897005391e-05]
84
[1.2778957270753732e-05, 1.836264918066155e-05, 2.8653030229100485e-06, 3.0046867809940814e-06, 1.4880520213811366e-06, 5.5563449091744488e-06, 0.0, 2.1304613944866935e-05, 1.5822969508624829e-05, 1.9179609173858303e-05]
85
[2.0141547723950826e-05, 1.3773031070335451e-05, 1.1468406096802608e-05, 8.3579598385563614e-06, 3.1821041069912681e-06, 1.1103408168039453e-05, 0.0, 2.2511249544776568e-05, 2.3700166706469572e-05, 2.2398662017142357e-05]
86
[2.511052153444937e-05, 1.9272021754043744e-05, 8.6072908891052236e-06, 2.3469247842911045e-06, 1.5088381280503604e-05, 0.0, 0.0, 2.418747109372843e-05, 1.7789438908455413e-05, 1.9115987718129612e-05]
87
[1.934556467717008e-05, 2.6621426343062526e-05, 8.6063990560464321e-06, 4.6940484614010902e-06, 9.3352208699326589e-06, 0.0, 0.0, 2.8718697677926341e-05, 1.0706232085141987e-05, 1.6736282176285644e-05]
88
[1.8175708865253437e-05, 2.387806337759979e-05, 0.0, 4.6932376674413412e-06, 7.8490971139322241e-06, 0.0, 0.0, 2.6899002173952358e-05, 8.5073708472327425e-06, 1.7904974336721557e-05]
89
[1.6163782267958338e-05, 2.6637254890202189e-05, 0.0, 4.6913526828840091e-06, 9.3395022065789757e-06, 0.0, 0.0, 2.5860040582137422e-05, 4.2518671681673892e-06, 1.5654675076873237e-05]
90
[9.7573019152696894e-06, 2.1128455931954115e-05, 2.8661062241100432e-06, 9.3749115015751006e-06, 1.1237489173948623e-05, 0.0, 0.0, 1.9290318032633147e-05, 3.098063392673045e-06, 9.3432644385216257e-06]
91
[1.0714180939841444e-05, 1.5628258474911783e-05, 0.0, 1.4709670020429666e-05, 1.1440866599377042e-05, 5.5530372416179308e-06, 0.0, 1.4835989975314767e-05, 0.0, 9.2706220663485439e-06]
92
[7.5549738409175227e-06, 1.3782701054787516e-05, 0.0, 7.0190785396162525e-06, 8.0597312774599583e-06, 0.0, 0.0, 1.0184818106134808e-05, 5.6627549940568844e-06, 1.3669175415897961e-05]
93
[9.9437539629321225e-06, 9.1864134943997477e-06, 2.8662990955441447e-06, 2.3405461691550222e-06, 9.1432125889079341e-06, 0.0, 0.0, 8.3284053665477753e-06, 4.5141491578776227e-06, 7.3507896677926787e-06]
94
[4.3970495795797593e-06, 8.2606037644927799e-06, 0.0, 0.0, 2.9816916735092569e-06, 0.0, 0.0, 9.1542709316494442e-06, 2.8311969661048986e-06, 3.2286080890731039e-06]
95
[4.3982392575470097e-06, 7.3485086360125518e-06, 2.8664921199600402e-06, 0.0, 2.9813942166168061e-06, 0.0, 0.0, 7.3368659384287493e-06, 4.5135097580806249e-06, 4.2576375048758441e-06]
96
[3.1584274906570897e-06, 5.5167698147090549e-06, 0.0, 4.6823706769949514e-06, 3.3814108867935566e-06, 0.0, 0.0, 5.5615756123783555e-06, 4.2481935399740767e-06, 6.3864562572096828e-06]
97
[2.2923483243286746e-06, 4.5935230124499737e-06, 2.8666852974826296e-06, 0.0, 2.980973175720214e-06, 0.0, 0.0, 3.6274320097118284e-06, 7.3499588485737011e-06, 5.4248272512852358e-06]
98
[3.2526670870614005e-06, 7.3540410501782283e-06, 1.1476615714212102e-05, 0.0, 1.4905686513411176e-06, 0.0, 0.0, 7.3310243845492451e-06, 8.1458422030167288e-06, 3.1576043218600747e-06]
99
[3.159923903955919e-06, 7.3535926428947018e-06, 5.7434491606139781e-06, 0.0, 0.0, 0.0, 0.0, 1.0084899270512704e-05, 9.0345687399628893e-06, 4.3948005172961269e-06]
100
[5.264506069385666e-06, 6.4456411059538032e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 7.4489463915139442e-06, 1.418085744997466e-06, 5.214687061383394e-06]
101
[8.700325438204537e-06, 7.365345505674914e-06, 0.0, 0.0, 4.4712605581365139e-06, 0.0, 0.0, 7.4499901988045458e-06, 1.4177494361972132e-06, 6.2466784504361383e-06]
102
[2.1983618289367346e-06, 5.5278054268692589e-06, 2.8706947079390477e-06, 0.0, 1.4902718353249078e-06, 0.0, 0.0, 9.4643812592609677e-07, 7.3556242888017653e-06, 1.0575540517990256e-05]
103
[3.2510834828136659e-06, 6.4375681525369322e-06, 5.7433020426087e-06, 0.0, 1.4905842705414951e-06, 0.0, 0.0, 5.5180527305243032e-06, 1.3304003279229759e-05, 1.0779436380919938e-05]
104
[2.1058810654173143e-06, 2.7642905918168204e-06, 2.8712829639870874e-06, 0.0, 0.0, 0.0, 0.0, 1.8921212364131357e-06, 1.3055192434316409e-05, 1.1871611036648466e-05]
105
[0.0, 1.1039905927975879e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 4.5329891817103007e-06, 5.6901893370070455e-06, 1.1602933788157355e-05]
106
[0.0, 4.6052201811558335e-06, 5.7418288374536108e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 9.0618770255540548e-06, 9.5447896930334064e-06]
107
[0.0, 6.4391533657476296e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 2.7206730546236457e-06, 7.1165969725422995e-06, 9.6106682020008494e-06]
108
[3.1587280763523129e-06, 4.6054552088892198e-06, 2.8705454825014853e-06, 0.0, 0.0, 0.0, 0.0, 2.8379942883238751e-06, 8.8045406485270927e-06, 1.0644464965001155e-05]
109
[4.5815973045704173e-06, 3.6785918160198161e-06, 5.7430063991892322e-06, 0.0, 5.9608227676033465e-06, 0.0, 0.0, 1.8138566870440354e-06, 9.0703989765045234e-06, 6.4532328528932315e-06]
110
[2.1984336889824263e-06, 3.678591816158594e-06, 5.7437932381582124e-06, 0.0, 1.4898274631747199e-06, 0.0, 0.0, 2.7600012335038393e-06, 6.2243998723288119e-06, 4.2574833400976786e-06]
111
[0.0, 1.8430876716213351e-06, 2.8728561753538218e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 3.1121999361366504e-06, 3.1597730211774255e-06]
112
[0.0, 5.5120313293133272e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 4.5346356330466797e-06, 0.0, 1.0306772268708908e-06]
113
[3.1591261844265972e-06, 9.1810387109481084e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 3.7439712406162062e-06, 0.0, 0.0]
114
[4.2110440254261583e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.783477606766894e-06, 0.0, 0.0]
115
[5.7280977590057347e-06, 0.0, 0.0, 0.0, 7.4460995372893635e-06, 0.0, 0.0, 0.0, 0.0, 0.0]
116
[2.1985055149442712e-06, 0.0, 0.0, 2.3428957404425521e-06, 3.1771968047600296e-06, 0.0, 0.0, 9.4584034016076401e-07, 0.0, 0.0]
117
[2.291289878636471e-06, 2.7538814660749145e-06, 0.0, 0.0, 2.9773297453294933e-06, 0.0, 0.0, 2.7209807787198503e-06, 0.0, 0.0]
118
[2.105721151335338e-06, 1.8440593504004399e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 1.8911944778265966e-06, 0.0, 2.0608942203903524e-06]
119
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
120
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
539.147528887
'''

train_labels = train_labels()
len(train_labels)

len(trained_clusters)
sum = 0
for i in range(len(trained_clusters)):
    sum += len(trained_clusters[i])
print(sum)


item_index = np.where(trained_clusters[0][0] == x_train)
bool_result = np.all(trained_clusters[0][0] == x_train[item_index])
len(item_index)
len(item_index[1])

trained_clusters[1][1] in x_train
# IndexError:
# trained_clusters[0][8425]

#len(x_train[trained_clusters[0][0] in x_train])
#x_train[trained_clusters[0][0] in x_train].shape

len(trained_centroids)
trained_centroids[0]
trained_clusters[0]
trained_np_cluster0_shape = np.array(trained_clusters[0]).shape
x_train.shape
len(trained_clusters)


def new_final_centroid(trained_centroids, trained_clusters):
    trained_centroid_indices = range(len(trained_centroids))
    new_centroids = []
    for centroid in trained_centroids:
        closest_dp = trained_clusters[0][0]
        smallest_distance = float("inf")
        for cluster in trained_clusters:
            for datapoint in cluster:
                distance_centroid_dp = np.linalg.norm(centroid, datapoint)
                if smallest_distance < distance_centroid_dp:
                    smallest_distance = distance_centroid_dp
                    closest_dp = datapoint
            new_centroids.append(closest_dp)
    return new_centroids

new_final_centroids = new_final_centroid(trained_centroids, trained_clusters)

